export const generalMetricOptions = [
	{ category: "Characteristics", title: "Overall Quality", metric: ["overallQualityScore"], isInteger: false },
	{ category: "Characteristics", title: "Maintainability", metric: ["maintainabilityScore"], isInteger: false },
	{ category: "Characteristics", title: "Security", metric: ["securityScore"], isInteger: false },
	{ category: "Characteristics", title: "Readability", metric: ["readabilityScore"], isInteger: false },
	{ category: "Characteristics", title: "Reusability", metric: ["reusabilityScore"], isInteger: false },
	{ category: "Violations", title: "Total Violations", metric: ["totalViolationsCount"], isInteger: true },
	{ category: "Violations", title: "Critical Violations", metric: ["Critical"], isInteger: true },
	{ category: "Violations", title: "Major Violations", metric: ["Major"], isInteger: true },
	{ category: "Violations", title: "Minor Violations", metric: ["Minor"], isInteger: true },
	{ category: "High Level Metrics", title: "Total Logical Loc Analyzed", metric: ["LogicalLOC"], isInteger: true },
	{ category: "High Level Metrics", title: "Total Physical Loc Analyzed", metric: ["PhysicalLOC"], isInteger: true },
	{ category: "High Level Metrics", title: "Duplicate Code (%)", metric: ["DuplicateCodePct"], isInteger: false },
	{ category: "High Level Metrics", title: "Maintainability Index", metric: ["MI"], isInteger: false },
	{ category: "High Level Metrics", title: "Cyclomatic Complexity", metric: ["CC"], isInteger: false },
	{ category: "High Level Metrics", title: "Comments Density (%)", metric: ["CD", "CommentsDensity"], isInteger: false },
	{ category: "Metric Scores", title: "Security Vulnerabilities of Dependencies", metric: ["SECURITY_VIOL", "NSP_VIOL"], isInteger: true },
];

export const allMetricOptions = [
	{ label: "Readability", value: ["readabilityScore"] },
	{ label: "Maintainability", value: ["maintainabilityScore"] },
	{ label: "Reusability", value: ["reusabilityScore"] },
	{ label: "Security", value: ["securityScore"] },
	{ label: "Overall Quality Score", value: ["overallQualityScore"] },
	{ label: "Total Violations", value: ["totalViolationsCount"] },
	{ label: "Critical Violations", value: ["Critical"] },
	{ label: "Major Violations", value: ["Major"] },
	{ label: "Minor Violations", value: ["Minor"] },
	{ label: "Total Logical Lines of Code", value: ["LogicalLOC"] },
	{ label: "Total Physical Lines of Code", value: ["PhysicalLOC"] },
	{ label: "Duplicate Code (%)", value: ["DuplicateCodePct"] },
	{ label: "Maintainability Index", value: ["MI"] },
	{ label: "Cyclomatic Complexity", value: ["CC"] },
	{ label: "Comments Density (%)", value: ["CD", "CommentsDensity"] },
	{ label: "Number of Files", value: ["NumFiles"] },
	{ label: "Number of Functions", value: ["NumFunctions"] },
	{ label: "Halstead Volume", value: ["Difficulty"] },
	{ label: "Number of Classes", value: ["NumClasses"] },
	{ label: "Code Effort (days)", value: ["EffortInDays"] },
	{ label: "Lack of Cohesion in Class Methods", value: ["LCOM5"] },
	{ label: "Nesting Level of Class", value: ["NL"] },
	{ label: "Weighted Methods per Class", value: ["WMC"] },
	{ label: "Coupling Between Objects", value: ["CBO"] },
	{ label: "Number of Incoming Invocations", value: ["NII"] },
	{ label: "Number of Outgoing Invocations", value: ["NOI"] },
	{ label: "Response Set for Class", value: ["RFC"] },
	{ label: "Number of Methods per Class", value: ["TNM"] },
	{ label: "Depth of Class Inheritance Tree", value: ["DIT"] },
	{ label: "Security Vulnerabilities of Dependencies", value: ["SECURITY_VIOL", "NSP_VIOL"] },
	{ label: "API Documentation", value: ["AD"] },
	{ label: "(Class) Size in Lines of Code", value: ["PHPMETRICS_LOC", "LOC", "ESCOMP_LOC"] },
	{ label: "Halstead Difficulty", value: ["PHPMETRICS_DIFF", "ESCOMP_DIFF"] },
	{ label: "Logical Lines of Code", value: ["LLOC"] },
	{ label: "Number of Imports", value: ["ESCOMP_IMPORTS"] },
	{ label: "Number of Parameters", value: ["ESCOMP_PAR", "PAR"] },
];

export const systemChecksOptions = [
	{ category: "Characteristics", title: "Overall Quality", metric: "overallQualityScore", isInteger: false },
	{ category: "Characteristics", title: "Maintainability", metric: "maintainabilityScore", isInteger: false },
	{ category: "Characteristics", title: "Security", metric: "securityScore", isInteger: false },
	{ category: "Characteristics", title: "Readability", metric: "readabilityScore", isInteger: false },
	{ category: "Characteristics", title: "Reusability", metric: "reusabilityScore", isInteger: false },
	{ category: "Violations", title: "Total Violations", metric: "Total Violations", isInteger: true },
	{ category: "Violations", title: "High Priority Violations", metric: "High Priority Violations", isInteger: true },
	{ category: "Violations", title: "Low Priority Violations", metric: "Low Priority Violations", isInteger: true },
	{ category: "Vulnerabilities", title: "Total Vulnerabilities", metric: "Total Vulnerabilities", isInteger: true },
	{ category: "Vulnerabilities", title: "High Priority Vulnerabilities", metric: "High Priority Vulnerabilities", isInteger: true },
	{ category: "Vulnerabilities", title: "Low Priority Vulnerabilities", metric: "Low Priority Vulnerabilities", isInteger: true },
];
